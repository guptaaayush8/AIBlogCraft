apiVersion: v1
kind: Namespace
metadata:
  name: database
  labels:
    purpose: database

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: database
  labels:
    app: mysql
spec:
  # serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: database
        image: mysql
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 3306
        envFrom:
        - secretRef:
            name: mysqldetails
        # command:
        # - /bin/sh
        # - -c 
        # - |
        #   until mysqladmin ping -h 127.0.0.1 -u root -p"${MYSQL_ROOT_PASSWORD}" --silent; do
        #       echo "Waiting for MySQL server to be available..."
        #       sleep 2
        #   done && \
        #   mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${MYSQL_DATABASE};" && \
        #   mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "USE your_database; CREATE TABLE IF NOT EXISTS ${MYSQL_TABLENAME} (Id int NOT NULL auto_increment, Title varchar(255), Content TEXT, Author varchar(255), ShortContent TEXT, TimeUploaded TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, primary key (id));"
        # env:
        #   - name: MYSQL_USER
        #     valueFrom:
        #       secretKeyRef:
        #         name: mysqldetails
        #         key: username
        #   - name: MYSQL_PASSWORD
        #     valueFrom:
        #       secretKeyRef:
        #         name: mysqldetails
        #         key: password
          
          # - name: MYSQL_ROOT_PASSWORD
          #   valueFrom:
          #     secretKeyRef:
          #       name: mysqldetails
          #       key: password  
        volumeMounts:
          - name: mysql-storage
            mountPath: /var/lib/mysql

      volumes: 
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc         
  # volumeClaimTemplates:
  # - metadata:
  #     name: mysql-storage
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     # storageClassName: hostpath  # Change if you have a different storage class
  #     volumeName: pv-hostpath
  #     resources:
  #       requests:
  #         storage: 0.5Gi



---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: database
  labels:
    app: mysql
spec:
  ports:
    - port: 3306
      name: mysql
  clusterIP: None
  selector:
    app: mysql